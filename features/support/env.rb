# IMPORTANT: This file is generated by cucumber-rails - edit at your own peril.
# It is recommended to regenerate this file in the future when you upgrade to a
# newer version of cucumber-rails. Consider adding your own code to a new file
# instead of editing this one. Cucumber will automatically load all features/**/*.rb
# files.

require 'simplecov'
require 'cucumber/rails'

# Capybara defaults to CSS3 selectors rather than XPath.
# If you'd prefer to use XPath, just uncomment this line and adjust any
# selectors in your step definitions to use the XPath syntax.
# Capybara.default_selector = :xpath

# By default, any exception happening in your Rails application will bubble up
# to Cucumber so that your scenario will fail. This is a different from how
# your application behaves in the production environment, where an error page will
# be rendered instead.
#
# Sometimes we want to override this default behaviour and allow Rails to rescue
# exceptions and display an error page (just like when the app is running in production).
# Typical scenarios where you want to do this is when you test your error pages.
# There are two ways to allow Rails to rescue exceptions:
#
# 1) Tag your scenario (or feature) with @allow-rescue
#
# 2) Set the value below to true. Beware that doing this globally is not
# recommended as it will mask a lot of errors for you!
#
ActionController::Base.allow_rescue = false

# Remove/comment out the lines below if your app doesn't have a database.
# For some databases (like MongoDB and CouchDB) you may need to use :truncation instead.
begin
  DatabaseCleaner.strategy = :transaction
rescue NameError
  raise "You need to add database_cleaner to your Gemfile (in the :test group) if you wish to use it."
end

# You may also want to configure DatabaseCleaner to use different strategies for certain features and scenarios.
# See the DatabaseCleaner documentation for details. Example:
#
#   Before('@no-txn,@selenium,@culerity,@celerity,@javascript') do
#     # { :except => [:widgets] } may not do what you expect here
#     # as Cucumber::Rails::Database.javascript_strategy overrides
#     # this setting.
#     DatabaseCleaner.strategy = :truncation
#   end
#
#   Before('~@no-txn', '~@selenium', '~@culerity', '~@celerity', '~@javascript') do
#     DatabaseCleaner.strategy = :transaction
#   end
#

# Possible values are :truncation and :transaction
# The :transaction strategy is faster, but might give you threading problems.
# See https://github.com/cucumber/cucumber-rails/blob/master/features/choose_javascript_database_strategy.feature
Cucumber::Rails::Database.javascript_strategy = :transaction

module Populate_methods
  def find_or_create_posts(num)
    if Post.any?
      @posts = Post.first(num)
    else
      @posts = []
    end
    find_or_create_forums(1) # Default to create 1 forum
    i = 1
    for i in 1..num
      @posts.push(Post.create!( title: "Post title" + i.to_s, description: "test description" + i.to_s, user_id: @user.id, forum_id: @forums.first.id ))
      i += 1
    end
    @posts
  end

  def find_or_create_user(email=nil, password=nil)
    if @user
      email = @user.email
      password = @user.password
    end

    if User.where(email: email).any?
      @user = User.where(email: email).first
    elsif email && password
      @user = User.create!( :email => email, :password => password, :password_confirmation => password )
    elsif !email && !password
      @user = User.create!( :email => "test2@email.com", :password => "password#1", :password_confirmation => "password#1" )
    else
      return "User does not exist"
    end

    return @user
  end

  def find_or_create_forums(num)
    find_or_create_user
    @forums = []

    if Forum.count >= num
      @forums = Forum.first(num)
    end

    if @forums.count < num
      for n in 1..num
        forum = Forum.new(name: "Test forum name" + n.to_s, description: "Forum description with a minimum of 20 chars.", user_id: @user.id)
        if forum.name != Forum.where(name: "Test forum name" + n.to_s)
         forum.save
          @forums.push(forum)
        end
        n += 1
      end
      @forums
    end
  end
end